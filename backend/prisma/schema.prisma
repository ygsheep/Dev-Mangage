// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  status      String   @default("ACTIVE") // ACTIVE, ARCHIVED, DELETED
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  apis        API[]
  tags        Tag[]
  
  @@map("projects")
}

model API {
  id           String     @id @default(uuid())
  projectId    String
  name         String
  method       String     // GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS
  path         String
  description  String?
  parameters   String?    // 存储参数JSON字符串
  responses    String?    // 存储响应JSON字符串
  status       String     @default("NOT_STARTED") // NOT_STARTED, IN_PROGRESS, COMPLETED, NOT_TESTED, TESTED, DEPRECATED
  frontendCode String?
  backendCode  String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  
  // 关联关系
  project      Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
  apiTags      APITag[]
  
  @@map("apis")
}

model Tag {
  id        String   @id @default(uuid())
  name      String
  color     String   @default("#3B82F6")
  projectId String
  createdAt DateTime @default(now())
  
  // 关联关系
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  apiTags   APITag[]
  
  @@unique([name, projectId])
  @@map("tags")
}

model APITag {
  apiId String
  tagId String
  
  api   API @relation(fields: [apiId], references: [id], onDelete: Cascade)
  tag   Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@id([apiId, tagId])
  @@map("api_tags")
}

// 枚举值说明:
// ProjectStatus: ACTIVE, ARCHIVED, DELETED
// APIStatus: NOT_STARTED, IN_PROGRESS, COMPLETED, NOT_TESTED, TESTED, DEPRECATED
// HTTPMethod: GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS